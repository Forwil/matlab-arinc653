function GET_PROCESS_STATUS (
		PROCESS_ID_TYPE PROCESS_ID,
		PROCESS_STATUS_TYPE *PROCESS_STATUS,
		RETURN_CODE_TYPE *RETURN_CODE )
	
		if(INVALID_ID(PROCESS_ID)):
            RETURN_CODE = INVALID_PARAM;
			return;
        end
		
		/*
		if(~(@.<ID:PROCESS_ID> : Process_Set))
		{	
			*RETURN_CODE = INVALID_PARAM;
			return;
		}
		*/
		
		Pro.<ID:PROCESS_ID> : Process_Set;
		
		PROCESS_STATUS->DEADLINE_TIME = Pro->DEADLINE_TIME;
		PROCESS_STATUS->CURRENT_PRIORITY = Pro->CURRENT_PRIORITY;
		PROCESS_STATUS->PROCESS_STATE = Pro->PROCESS_STATE;
		PROCESS_STATUS->PERIOD = Pro->PERIOD;
		PROCESS_STATUS->TIME_CAPACITY = Pro->TIME_CAPACITY;
		PROCESS_STATUS->ENTRY_POINT = Pro->ENTRY_POINT;
		PROCESS_STATUS->STACK_SIZE = Pro->STACK_SIZE;
		PROCESS_STATUS->BASE_PRIORITY = Pro->BASE_PRIORITY;
		PROCESS_STATUS->DEADLINE = Pro->DEADLINE;
		PROCESS_STATUS->NAME = Pro->NAME;

		*RETURN_CODE = NO_ERROR;
		return;

	